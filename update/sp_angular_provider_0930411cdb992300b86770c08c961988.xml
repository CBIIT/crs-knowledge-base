<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_angular_provider">
    <sp_angular_provider action="INSERT_OR_UPDATE">
        <name>NERDArticle</name>
        <script><![CDATA[function NERDArticle($http){
	this.getArticle = function(params, sessionId){
		return new Promise(function(resolve, reject){
			$http({
				url: '/api/x_26385_crs_kd/export/getDocumentById',
				method: 'GET',
				beforeSend: function(xhr){xhr.setRequestHeader('X-UserToken', sessionId); },
				headers: {
					'Content-Type': 'application/json'
				},
				params: {'id': params.doc_id, 'name': params.template_id, version: params.version}
			}).then(resolve, reject);
		});
	};
	this.getVersions = function(params, sessionId){
		return new Promise(function(resolve, reject){
			$http({
				url: '/api/x_26385_crs_kd/export/getVersions',
				method: 'GET',
				beforeSend: function(xhr){xhr.setRequestHeader('X-UserToken', sessionId); },
				headers: {
					'Content-Type': 'application/json'
				},
				params: {'version': params.version, 'number': params.number}
			}).then(resolve, reject);
		});
	};
	this.getLinks = function(params, sessionId){
		return new Promise(function(resolve, reject){
			$http({
				url: '/api/x_26385_crs_kd/export/getLinks',
				method: 'GET',
				beforeSend: function(xhr){xhr.setRequestHeader('X-UserToken', sessionId); },
				headers: {
					'Content-Type': 'application/json'
				},
				params: params
			}).then(resolve, reject);
		});
	};
	this.addLink = function(params, sessionId){
		return new Promise(function(resolve, reject){
			$http({
				 url: '/api/x_26385_crs_kd/export/addLink',
				 method : "POST",
				 beforeSend: function(xhr){ xhr.setRequestHeader('X-UserToken', sessionId); },
				 headers: {'Content-Type': 'application/json'},
				 data: JSON.stringify(params),
				 processData: false
			}).then(resolve, reject);
		});
	};
	this.deleteLink = function(params, sessionId){
		return new Promise(function(resolve, reject){
			$http({
				 url: '/api/x_26385_crs_kd/export/deleteLink',
				 method : "POST",
				 beforeSend: function(xhr){ xhr.setRequestHeader('X-UserToken', sessionId); },
				 headers: {'Content-Type': 'application/json'},
				 data: JSON.stringify(params),
				 processData: false
			}).then(resolve, reject);
		});
	};
	this.getArticleWithSchema = function(params, sessionId){
		return new Promise(function(resolve, reject){
			$http({
				url: '/api/x_26385_crs_kd/export/getDocumentWithSchema',
				method: 'GET',
				beforeSend: function(xhr){xhr.setRequestHeader('X-UserToken', sessionId); },
				headers: {
					'Content-Type': 'application/json'
				},
				params: params
			}).then(resolve, reject);
		});
	};
	this.searchArticleByText = function(params, sessionId){
		return new Promise(function(resolve, reject){
			$http({
				url: '/api/x_26385_crs_kd/export/searchArticleByText',
				method: 'GET',
				beforeSend: function(xhr){xhr.setRequestHeader('X-UserToken', sessionId); },
				headers: {
					'Content-Type': 'application/json'
				},
				params: params
			}).then(resolve, reject);
		});
	};
	
	this.saveWarning = function(params, sessionId){
		return new Promise(function(resolve, reject){
			$http({
				 url: '/api/x_26385_crs_kd/export/saveWarning',
				 method : "POST",
				 beforeSend: function(xhr){ xhr.setRequestHeader('X-UserToken', sessionId); },
				 headers: {'Content-Type': 'application/json'},
				 data: JSON.stringify(params),
				 processData: false
			}).then(resolve, reject);
		});
	};
	
	this.saveVersion = function(template, params, sessionId){
		return new Promise(function(resolve, reject){
			$http({
				 url: '/api/x_26385_crs_kd/export/saveVersion',
				 method : "POST",
				 beforeSend: function(xhr){ xhr.setRequestHeader('X-UserToken', sessionId); },
				 headers: {'Content-Type': 'application/json'},
				 data: JSON.stringify({'template': template, 'params':params}),
				 processData: false
			}).then(resolve, reject);
		});
	};
	
	this.saveAttachmentWithVersion = function(params, sessionId){
		return new Promise(function(resolve, reject){
			$http({
				 url: '/api/x_26385_crs_kd/export/saveAttachmentWithVersion',
				 method : "POST",
				 beforeSend: function(xhr){ xhr.setRequestHeader('X-UserToken', sessionId); },
				 headers: {'Content-Type': 'application/json'},
				 data: JSON.stringify(params),
				 processData: false
			}).then(resolve, reject);
		});
	};
}]]></script>
        <sys_class_name>sp_angular_provider</sys_class_name>
        <sys_created_by>yuw5@nih.gov</sys_created_by>
        <sys_created_on>2018-10-17 21:14:02</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>0930411cdb992300b86770c08c961988</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>NERDArticle</sys_name>
        <sys_package display_value="CRS Knowledge Database" source="x_26385_crs_kd">404e613b4f9213007221e321a310c738</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="CRS Knowledge Database">404e613b4f9213007221e321a310c738</sys_scope>
        <sys_update_name>sp_angular_provider_0930411cdb992300b86770c08c961988</sys_update_name>
        <sys_updated_by>yuw5@nih.gov</sys_updated_by>
        <sys_updated_on>2019-05-06 20:54:53</sys_updated_on>
        <type>service</type>
    </sp_angular_provider>
</record_update>
